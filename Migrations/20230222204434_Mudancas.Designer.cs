// <auto-generated />
using System;
using ContatosMVC_webapi.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ContatosMVC_webapi.Migrations
{
    [DbContext(typeof(dbContext))]
    [Migration("20230222204434_Mudancas")]
    partial class Mudancas
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ContatosMVC_webapi.Models.Contato", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Celular")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "UsuarioId" }, "IX_Contatos_UsuarioId");

                    b.ToTable("Contatos");
                });

            modelBuilder.Entity("ContatosMVC_webapi.Models.Tarefa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("DataFinal")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("descricao");

                    b.Property<int?>("TarefaEnum")
                        .HasColumnType("int");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "UsuarioId" }, "IX_Tarefas_UsuarioId");

                    b.ToTable("Tarefas");
                });

            modelBuilder.Entity("ContatosMVC_webapi.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Perfil")
                        .HasColumnType("int");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("ContatosMVC_webapi.Models.UsuarioContato", b =>
                {
                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.Property<int>("ContatoId")
                        .HasColumnType("int");

                    b.HasKey("UsuarioId", "ContatoId");

                    b.HasIndex("ContatoId");

                    b.ToTable("UsuarioContato");
                });

            modelBuilder.Entity("ContatosMVC_webapi.Models.UsuarioTarefa", b =>
                {
                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.Property<int>("TarefaId")
                        .HasColumnType("int");

                    b.HasKey("UsuarioId", "TarefaId");

                    b.HasIndex("TarefaId");

                    b.ToTable("UsuarioTarefa");
                });

            modelBuilder.Entity("ContatosMVC_webapi.Models.Contato", b =>
                {
                    b.HasOne("ContatosMVC_webapi.Models.Usuario", "Usuario")
                        .WithMany("Contatos")
                        .HasForeignKey("UsuarioId");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("ContatosMVC_webapi.Models.Tarefa", b =>
                {
                    b.HasOne("ContatosMVC_webapi.Models.Usuario", "Usuario")
                        .WithMany("Tarefas")
                        .HasForeignKey("UsuarioId");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("ContatosMVC_webapi.Models.UsuarioContato", b =>
                {
                    b.HasOne("ContatosMVC_webapi.Models.Contato", "contato")
                        .WithMany("UsuarioContatos")
                        .HasForeignKey("ContatoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ContatosMVC_webapi.Models.Usuario", "usuario")
                        .WithMany("UsuarioContatos")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("contato");

                    b.Navigation("usuario");
                });

            modelBuilder.Entity("ContatosMVC_webapi.Models.UsuarioTarefa", b =>
                {
                    b.HasOne("ContatosMVC_webapi.Models.Tarefa", "tarefa")
                        .WithMany("UsuarioTarefas")
                        .HasForeignKey("TarefaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ContatosMVC_webapi.Models.Usuario", "usuario")
                        .WithMany("UsuarioTarefas")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("tarefa");

                    b.Navigation("usuario");
                });

            modelBuilder.Entity("ContatosMVC_webapi.Models.Contato", b =>
                {
                    b.Navigation("UsuarioContatos");
                });

            modelBuilder.Entity("ContatosMVC_webapi.Models.Tarefa", b =>
                {
                    b.Navigation("UsuarioTarefas");
                });

            modelBuilder.Entity("ContatosMVC_webapi.Models.Usuario", b =>
                {
                    b.Navigation("Contatos");

                    b.Navigation("Tarefas");

                    b.Navigation("UsuarioContatos");

                    b.Navigation("UsuarioTarefas");
                });
#pragma warning restore 612, 618
        }
    }
}
